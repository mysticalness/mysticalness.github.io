## 가상 DOM과 리액트 파이버

### DOM과 브라우저 렌더링 과정

DOM(Document Object Model) : 웹페이지에 대한 인터페이스

* 렌더링 트리 만들어 지는 순서
  1. HTML 파일 다운로드
  2. HTML 파싱, DOM 만듦
  3. CSS 파일 다운로드
  4. CSS 파싱, CSSOM 트리 만듦
  5. DOM 노드 순회
  6. CSS 스타일 정보 노드에 적용
      * 레이아웃(layout,reflow) : 좌표 계산 → 페인팅(painting) : 색과 같은 유효한 모습 그림



### 가상 DOM의 탄생 배경
* 많은 비용이 든다.
* 인터랙션에 따라 변경하는 DOM을 추적하기 번거롭다.
* 개발자는 DOM 결과물만 알고 싶다.
    
    * 가상 DOM
        * 웹페이지가 표시해야 할 DOM을 메모리에 저장. 변경에 대한 준비가 완료되면 실제 브라우저의 DOM에 반영.
        * 렌더링 최소화, 개발자 부담 줄어듦



### 가상 DOM을 위한 아키텍처, 리액트 파이버

* 리액트 파이버란?
    * 가상 DOM과 렌더링 과정 최적화
    * 파이버 재조정자(fiber reconciler)가 관리
    * 가상 DOM과 실제 DOM을 비교하는 작업(알고리즘)
    * 비동기
    * 스택의 비효율성을 타파